{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","addFindedMovie","useState","query","setQuery","loading","setLoading","findedMovie","setFindedMovie","hasError","setHasError","onSubmit","event","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","movieData","normalizeMovieData","Title","Plot","Poster","imdbID","finally","htmlFor","type","id","placeholder","value","onChange","target","classNames","disabled","onClick","App","setMovies","some","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.34c3516b.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard/MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  addFindedMovie: (findedMovie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ addFindedMovie }) => {\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [findedMovie, setFindedMovie] = useState<Movie | null>(null);\n  const [hasError, setHasError] = useState(false);\n\n  const onSubmitFindMovie = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setLoading(true);\n\n    // eslint-disable-next-line max-len\n    const defaultPic = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\n    getMovie(query)\n      .then(movieData => {\n        if ('Error' in movieData) {\n          setHasError(true);\n\n          return;\n        }\n\n        const normalizeMovieData = {\n          title: movieData.Title,\n          description: movieData.Plot,\n          imgUrl: movieData.Poster ? movieData.Poster : defaultPic,\n          imdbUrl: `https://www.imdb.com/title/${movieData.imdbID}/`,\n          imdbId: movieData.imdbID,\n        };\n\n        setFindedMovie(normalizeMovieData);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n\n    if (!findedMovie) {\n      return;\n    }\n\n    addFindedMovie(findedMovie);\n    setHasError(false);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={onSubmitFindMovie}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={(event) => {\n                setQuery(event.target.value);\n                setHasError(false);\n              }}\n            />\n          </div>\n\n          {hasError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button is-light',\n                {\n                  'is-loading': loading,\n                },\n              )}\n              disabled={!query}\n            >\n              {findedMovie ? 'Search again' : 'Find a movie'}\n            </button>\n          </div>\n\n          {findedMovie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => {\n                  addFindedMovie(findedMovie);\n                  setQuery('');\n                  setFindedMovie(null);\n                }}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n\n        </div>\n      </form>\n\n      <div className=\"container\" data-cy=\"previewContainer\">\n        {findedMovie && (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={findedMovie} />\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=4420719e';\n// const API_URL = 'http://www.omdbapi.com/?i=tt3896198&apikey=4420719e';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addFindedMovie = (findedMovie: Movie) => {\n    if (movies.some(movie => movie.imdbId === findedMovie.imdbId)) {\n      return;\n    }\n\n    setMovies([...movies, findedMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          addFindedMovie={addFindedMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}